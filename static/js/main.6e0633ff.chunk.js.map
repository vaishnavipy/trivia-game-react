{"version":3,"sources":["categoryPicker.js","quiz.js","playAgain.js","App.js","index.js"],"names":["CategoryPicker","props","className","onClick","event","console","log","target","nodeName","id","chooseCategory","textContent","preventDefault","style","color","Quiz","useState","questionsArr","setQuestionsArr","questionNo","setQuestionNo","answers","setAnswers","score","setScore","timeLeft","setTimeLeft","Array","playerAnsArr","setPlayerAnsArr","categories","category","no","useEffect","categoryNo","find","obj","fetch","then","response","json","data","results","length","randomIndex","Math","floor","random","tempArr","count","incorrect_answers","push","dangerouslySetInnerHTML","__html","correct_answer","i","handleGameOver","handleScore","handlePlayerAns","handleQuestionsArr","intervalId","setInterval","prevTime","prevNo","clearInterval","prevScore","difficulty","toUpperCase","question","PlayAgain","playerAns","result","quesArr","map","index","App","setCategory","gameOver","setGameOver","setPlayerAns","setQuesArr","value","answerArr","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e0633ff.chunk.js","sourcesContent":["import React from \"react\"\n\nfunction CategoryPicker(props){\n\n    const color ={color:\"white\"}\n\n    function handleClick(event){ console.log(event.target.nodeName)\n        if(event.target.nodeName === \"DIV\" ){\n            if(event.target.id !== \"mainDiv\"){\n            props.chooseCategory(event.target.textContent)\n            }\n           \n        }else{\n            event.preventDefault()\n        }\n\n    }\n\n\n    return(\n    <div className=\"category-picker\" onClick={handleClick} id=\"mainDiv\">\n        <h1 style={color}>Pick A Category</h1>\n        \n        <div className=\"category\">Science And Nature</div>\n\n        <div className=\"category\">Celebrities</div>\n\n        <div className=\"category\">Sports</div>\n\n        <div className=\"category\">Animals</div>\n\n        <div className=\"category\">Mythology</div>\n\n        <div className=\"category\">Genral Knowledge</div>\n\n    </div>)\n}\n\nexport default CategoryPicker;","import React, { Fragment, useEffect, useState } from \"react\"\nimport \"./App.css\"\n\nfunction Quiz(props){\n\n    const [questionsArr,setQuestionsArr] = useState(\"\")\n\n    const [questionNo,setQuestionNo] = useState(0)\n   const [answers,setAnswers] = useState([])\n\n   const [score,setScore] =useState(0);\n  const [timeLeft,setTimeLeft] = useState(10)\n\n const [playerAnsArr,setPlayerAnsArr] = useState(Array(10))\n\n    const categories =[\n        {category :\"Science And Nature\",\n        no:17},\n        {category :\"Celebrities\",\n        no:26},\n        {category :\"Sports\",\n        no:21},\n        {category :\"Animals\",\n        no:27},\n        {category :\"Mythology\",\n        no:20},\n        {category :\"Genral Knowledge\",\n        no:9}  ]\n\n    useEffect(()=>{\n\n        if(props.category){\n            const categoryNo = categories.find(obj => obj.category === props.category)\n           \n            fetch(`https://opentdb.com/api.php?amount=10&category=${categoryNo.no}`)\n            .then(response => response.json())\n            .then(data => setQuestionsArr(data.results) )\n\n        }\n    },[])\n\n    function timer(){\n\n        setTimeLeft(prevTime => prevTime -1)\n    }\n\n\n    useEffect(()=>{\n\n\n        //console.log(questionsArr)\n       \n       \n        if(questionsArr.length !== 0 && questionNo < 10){\n            //console.log(questionNo)\n        let randomIndex = Math.floor(Math.random()*4)\n          var tempArr=[]\n          var count =0\n          let incorrect_ans_length = questionsArr[questionNo].incorrect_answers.length\n         \n            if(incorrect_ans_length == 1){\n               \n                tempArr.push(<div id=\"answers\" className=\"answer-class\" dangerouslySetInnerHTML={{ __html:questionsArr[questionNo].correct_answer }}></div>)\n\n                tempArr.push(<div  className=\"answer-class\" dangerouslySetInnerHTML={{ __html:questionsArr[questionNo].incorrect_answers[0] }}></div>)\n               \n            }else{\n\n            for(let i = 0 ; i< 4 ;i++){\n\n                if(i === randomIndex){\n                    tempArr.push(<div id=\"answers\" className=\"answer-class\" dangerouslySetInnerHTML={{ __html: questionsArr[questionNo].correct_answer}}></div>)\n\n                }else{\n                    tempArr.push(<div className=\"answer-class\" dangerouslySetInnerHTML={{ __html: questionsArr[questionNo].incorrect_answers[count]}}></div>)\n                    count++\n                }\n                \n            }\n             }\n         \n        setAnswers(tempArr)\n\n\n        } \n\n        if(questionNo > 9){\n           // console.log(\"ji\")\n             props.handleGameOver(true)\n             props.chooseCategory(\"\")\n             props.handleScore(score)\n             console.log(playerAnsArr )\n             props.handlePlayerAns(playerAnsArr)\n             props.handleQuestionsArr(questionsArr)\n \n         }\n        \n\n    \n\n\n      \n    },[questionsArr,questionNo])\n\n    useEffect(()=>{\n\n        let intervalId =  setInterval(()=>{\n\n            if(timeLeft>=1){\n            timer()    \n            }else{\n                setQuestionNo(prevNo => prevNo + 1)\n                setTimeLeft(10)\n            }\n\n        },1000)\n\n\n        return () => clearInterval(intervalId)\n\n\n\n\n    },[timeLeft])\n\n\n\n       \n    \n   function handleClick(event){\n\n    if(event.target.nodeName !== \"H1\" || event.target.nodeName !== \"H4\" ){\n\n        if(event.target.textContent === questionsArr[questionNo].correct_answer){\n            setScore(prevScore => prevScore +1)\n            //console.log(score)\n        }\n        let tempArr = playerAnsArr\n        tempArr[questionNo] =event.target.textContent\n\n        setPlayerAnsArr(tempArr) \n        console.log(playerAnsArr)\n        console.log(questionNo)\n        setQuestionNo(prevNo => prevNo + 1)\n        setTimeLeft(10)\n       \n    }\n\n   }\n\n   \n \n  \n    return(\n\n    <div onClick={handleClick}>\n      \n        { questionsArr.length !== 0 && questionNo < 10 ? \n        <Fragment>\n        <h4 >\n            <span className=\"questionNo\">{`QUESTION : ${questionNo+1}`}</span>\n            <span className=\"time\">{`${(questionsArr[questionNo].difficulty).toUpperCase()} | TIME LEFT : ${timeLeft}` }</span>\n        </h4>\n        <h1 className=\"question\" dangerouslySetInnerHTML={{ __html:questionsArr[questionNo].question }}></h1> \n         {answers}\n         </Fragment> \n         \n         : \"\"}\n      \n       \n\n    </div>)\n\n}\n\nexport default Quiz;","import Rect, { Fragment } from \"react\"\n\nfunction PlayAgain(props){\n\n    function handleClick(){\n\n        props.handleGameOver(false)\n\n    }\n\n{console.log(props.playerAns)}\n\n\n\n  const result =  props.quesArr.map((question,index) => {\n   \n        if(props.playerAns[index] ){\n          \n        return(    <li  className=\"list\"> \n                   {question.question}\n                    <ul >\n                        <li className=\"c-ans\"><strong>Correct Answer: {question.correct_answer   }</strong> </li>\n                        <li className=\"p-ans\"><strong>Your Answer : {props.playerAns[index]} </strong></li>\n                    </ul>\n                    </li> \n                )\n            \n        }else{\n            return(   <li> \n                        {question.question}\n                        <ul>\n                        <li className=\"c-ans\">Correct Answer: {question.correct_answer   } </li>\n                        <li className=\"p-ans\">Your Answer : NA </li>\n                        </ul>  </li>   \n             \n           )\n\n        }\n    \n    \n    })\n\n    return(<div>\n        <h1 style={{color:\"white\"}}>Your Score : {props.score}</h1>\n        <div onClick={handleClick} className=\"play-again\">Play Again</div>\n        <ol className=\"result\">{result}</ol>\n       \n\n    </div>)\n}\n\nexport default PlayAgain;","\nimport './App.css';\nimport React, { useState } from \"react\"\nimport CategoryPicker from \"./categoryPicker\"\nimport Quiz from \"./quiz\"\nimport PlayAgain from \"./playAgain\"\n\n\nfunction App() {\n\n  const [category,setCategory] = useState(\"\")\n\n  const [gameOver,setGameOver] = useState(false)\n\n  const [score,setScore] = useState(\"\")\n\n  const [playerAns,setPlayerAns] = useState(\"\")\n\n  const [quesArr,setQuesArr]=useState(\"\")\n\n  function chooseCategory(category){\n\n    setCategory(category)\n\n  }\n\n  function handleGameOver(value){\n    setGameOver(value)\n  }\n\n  function handleScore(score){\n    setScore(score)\n  }\n\n  function handlePlayerAns(answerArr){\n    setPlayerAns(answerArr)\n  }\n\n  function handleQuestionsArr(quesArr){\n    setQuesArr(quesArr)\n  }\n\n  return (\n    <div className=\"main-container\">\n\n      {!gameOver ? \n       category ?  <Quiz  \n       category={category} \n       handleGameOver={handleGameOver} \n       chooseCategory={chooseCategory} \n       handleScore={handleScore} \n       handlePlayerAns={handlePlayerAns}\n       handleQuestionsArr={handleQuestionsArr}\n       /> \n      \n      : <CategoryPicker chooseCategory={chooseCategory}/> \n\n      :\n      \n       <PlayAgain handleGameOver={handleGameOver} score={score} playerAns={playerAns} quesArr={quesArr}/>  }\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n \n    <App />\n ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}